//integrator.vp

//; use strict ;

//integrator.vp
//; my $bW = 8 ;
//; my $sW = 16 ;
//; my $eC = 8 ;

module `mname`
  (  input logic  [`$bW-1`:0] d,
     input logic 	      d_vld, //d is valid
     output logic 	      d_rdy, //rdy for d
     
     output logic [`$sW-1`:0] sum,
     output logic 	      sum_vld, //sum is valid
     input logic 	      sum_rdy, //rdy for sum

     input logic 	      clk,
     input logic 	      rst  );
	
	logic en;
	logic [2:0] count;

	assign en = 1'b1;
	
	logic [`$bW-1`:0] q;
	logic [`$sW-1`:0] sum_temp;
	logic [`$sW-1`:0] sum_ff;
	
	
	//; my $dff_mod_input  = generate("dff","my_dff1");	
	//; my $dff_mod_output = generate("dff","my_dff2");	
	`$dff_mod_input->instantiate` (.d(d), .clk(clk), .rst(rst), .en(en), .q(q));
	
	always_comb begin
		sum_ff = 0;
	 	count = 3'b0;
	 	d_rdy = 1'b1;
		unique case(1'b1)
			d_vld && d_rdy && (count < 8) :
				begin
					sum_ff = sum_ff + q;
					count = count + 1;
				end
			count == 8  && sum_rdy : 
				begin
					d_rdy = 'b0;
					sum_vld = 'b1;
					sum_ff = 'b0;
					count = 'b0;
				end 
			default : sum_ff = 'b0;
		endcase	
	end
	
	`$dff_mod_output->instantiate` (.d(sum_ff), .clk(clk), .rst(rst), .en(en), .q(sum));
	
endmodule 
